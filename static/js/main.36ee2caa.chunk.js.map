{"version":3,"sources":["api/buy-bch.api.js","components/intl-wrapper/intl-wrapper.component.jsx","components/header/header.component.jsx","components/custom-button/custom-button.component.jsx","components/form-input/form-input.component.jsx","components/spinner/spinner.component.jsx","components/new-order/new-order.component.jsx","components/payment-pending/payment-pending.component.jsx","components/phone-verification/phone-verification.component.jsx","components/photo-verification/photo-verification.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["backendUrl","process","getRate","bgnAmount","a","axios","get","response","data","errorId","getOrder","orderId","newOrder","bchAddress","email","post","bgn_amount","bch_addr","order","errorIdFromErrorForStatus","verifyPhone","phone","verifyPhoneCode","secretCode","secret_code","verifyPhoto","photo","photoUrl","headers","type","err","statusCode","customErrorId","status","Context","React","createContext","messagesFromLocal","locale","test","Bulgarian","English","currentLocale","navigator","language","IntlWrapper","props","useState","setLocale","messages","setMessages","Provider","value","selectLanguage","newLocale","children","Header","context","useContext","className","onClick","CustomButton","otherProps","inverted","FormInput","handleChange","label","shrink","onChange","length","Spinner","NewOrder","setOrder","bgn","setBgn","setEmail","setBchAddress","bch","setBch","errorMessage","setErrorMessage","loading","setLoading","didMount","useRef","intl","useIntl","useEffect","current","timeOutId","setTimeout","bchAmount","clearTimeout","handleSubmit","event","preventDefault","localStorage","setItem","id","formatMessage","onSubmit","name","target","required","step","max","min","toString","readOnly","url","href","PaymentPending","paymentUrl","useReducer","x","forceUpdate","window","open","getItem","clear","location","reload","PhoneVerification","setPhone","validationCode","setValidationCode","codeSent","setCodeSent","PhotoVerification","photoSuffix","declarationFormUrl","setPhoto","key","setKey","files","img","alt","src","URL","createObjectURL","App","retrievedOrder","console","log","fetchOrder","renderSwitch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ee2caa.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nexport const getRate = async (bgnAmount) => {\n  try {\n    const response = await axios.get(\n      `${backendUrl}/rate/bchbgn?amount_bgn=${bgnAmount}`\n    );\n    return response.data[\"amount_bch\"];\n  } catch (err) {\n    return { errorId: \"bchapi.error.general\" };\n  }\n};\n\nexport const getOrder = async (orderId) => {\n  try {\n    const response = await axios.get(`${backendUrl}/order/${orderId}`);\n    return response.data;\n  } catch (err) {\n    return { errorId: \"bchapi.error.general\" };\n  }\n};\n\nexport const newOrder = async (bgnAmount, bchAddress, email) => {\n  try {\n    const response = await axios.post(`${backendUrl}/order`, {\n      bgn_amount: bgnAmount,\n      bch_addr: bchAddress,\n      email,\n    });\n    return { order: response.data };\n  } catch (err) {\n    return errorIdFromErrorForStatus(err, 503, \"bchapi.error.notEnoughBch\");\n  }\n};\n\nexport const verifyPhone = async (orderId, phone) => {\n  try {\n    await axios.post(`${backendUrl}/order/${orderId}/id/phone`, {\n      phone,\n    });\n  } catch (err) {\n    return errorIdFromErrorForStatus(err, 400, \"bchapi.error.phoneNumber\");\n  }\n};\n\nexport const verifyPhoneCode = async (orderId, phone, secretCode) => {\n  try {\n    const response = await axios.post(\n      `${backendUrl}/order/${orderId}/id/phone`,\n      {\n        phone,\n        secret_code: secretCode,\n      }\n    );\n    return { order: response.data };\n  } catch (err) {\n    return errorIdFromErrorForStatus(err, 403, \"bchapi.error.validationCode\");\n  }\n};\n\nexport const verifyPhoto = async (orderId, photo, photoUrl) => {\n  try {\n    const response = await axios.post(\n      `${backendUrl}/order/${orderId}/id/${photoUrl}`,\n      photo,\n      {\n        headers: {\n          \"Content-Type\": photo.type,\n        },\n      }\n    );\n    return { order: response.data };\n  } catch (err) {\n    return errorIdFromErrorForStatus(err, 400, \"bchapi.error.photoFormat\");\n  }\n};\n\nconst errorIdFromErrorForStatus = (err, statusCode, customErrorId) => {\n  let errorId;\n  if (err.response && err.response.status === statusCode) {\n    errorId = customErrorId;\n  } else {\n    errorId = \"bchapi.error.general\";\n  }\n  return { errorId };\n};\n","import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport Bulgarian from \"../../lang/bg.json\";\nimport English from \"../../lang/en.json\";\n\nexport const Context = React.createContext();\n\nconst messagesFromLocal = (locale) => {\n  return /^bg\\b/.test(locale) ? Bulgarian : English;\n};\n\nconst currentLocale = navigator.language;\n\nconst IntlWrapper = (props) => {\n  const [locale, setLocale] = useState(currentLocale);\n  const [messages, setMessages] = useState(messagesFromLocal(currentLocale));\n\n  function selectLanguage(newLocale) {\n    setLocale(newLocale);\n    setMessages(messagesFromLocal(newLocale));\n  }\n\n  return (\n    <Context.Provider value={{ locale, selectLanguage }}>\n      <IntlProvider messages={messages} locale={locale}>\n        {props.children}\n      </IntlProvider>\n    </Context.Provider>\n  );\n};\n\nexport default IntlWrapper;\n","import React, { useContext } from \"react\";\nimport \"./header.styles.scss\";\nimport { Context } from \"../intl-wrapper/intl-wrapper.component\";\n\nconst Header = () => {\n  const context = useContext(Context);\n\n  return (\n    <div className=\"header-container\">\n      <div className=\"options-container\">\n        <div className=\"option\" onClick={() => context.selectLanguage(\"bg-BG\")}>\n          Български\n        </div>\n        <div className=\"option\" onClick={() => context.selectLanguage(\"en\")}>\n          English\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./custom-buttom.styles.scss\";\n\nconst CustomButton = ({ children, inverted, ...otherProps }) => (\n  <button className=\"custom-button\" {...otherProps}>\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React from \"react\";\n\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({ handleChange, label, shrink, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = () => (\n  <div className=\"spinner-overlay\">\n    <div className=\"spinner-container\" />\n  </div>\n);\n\nexport default Spinner;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { newOrder, getRate } from \"../../api/buy-bch.api\";\nimport Spinner from \"../spinner/spinner.component\";\nimport { useIntl } from \"react-intl\";\n\nimport \"../form.styles.scss\";\n\nfunction NewOrder({ setOrder }) {\n  const [bgn, setBgn] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [bchAddress, setBchAddress] = useState(\"\");\n  const [bch, setBch] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const didMount = useRef(false);\n\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (didMount.current) {\n      const timeOutId = setTimeout(async () => {\n        const bchAmount = await getRate(bgn);\n        setBch(bchAmount);\n      }, 1000);\n      return () => clearTimeout(timeOutId);\n    } else {\n      didMount.current = true;\n    }\n  }, [bgn]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const response = await newOrder(bgn, bchAddress, email);\n    setLoading(false);\n    if (response.order) {\n      localStorage.setItem(\"orderId\", response.order.id);\n      setOrder(response.order);\n    } else if (response.errorId) {\n      setErrorMessage(intl.formatMessage({ id: response.errorId }));\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangeBchAddress = (event) => {\n    setBchAddress(event.target.value);\n  };\n\n  const handleChangeBgn = (event) => {\n    setBgn(event.target.value);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"new-order\">\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChangeEmail}\n          value={email}\n          label={intl.formatMessage({ id: \"order.email\" })}\n          required\n        />\n        <FormInput\n          name=\"bchAddress\"\n          type=\"bchAddress\"\n          handleChange={handleChangeBchAddress}\n          value={bchAddress}\n          label={intl.formatMessage({ id: \"order.bchAddress\" })}\n          required\n        />\n        <FormInput\n          name=\"bgn\"\n          type=\"number\"\n          step=\"0.001\"\n          handleChange={handleChangeBgn}\n          value={bgn}\n          label={intl.formatMessage({ id: \"order.bgnAmount\" })}\n          required\n          max={process.env.REACT_APP_MAX_BGN_AMOUNT}\n          min={process.env.REACT_APP_MIN_BGN_AMOUNT}\n        />\n        <FormInput\n          name=\"bch\"\n          type=\"text\"\n          value={bch ? bch.toString() : \"\"}\n          label={intl.formatMessage({ id: \"order.bchAmount\" })}\n          readOnly\n        />\n        <div className=\"group\">\n          <input type=\"checkbox\" required name=\"termsConditions\" />\n          <label>\n            {intl.formatMessage(\n              {\n                id: \"order.termAndConditions\",\n              },\n              {\n                a: (url) => (\n                  <a href={process.env.REACT_APP_TERMS_AND_CONDITIONS_URL}>\n                    {url}\n                  </a>\n                ),\n              }\n            )}\n          </label>\n        </div>\n\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">\n            {intl.formatMessage({ id: \"order.buyButton\" })}\n          </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default NewOrder;\n","import React, { useReducer } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { useIntl } from \"react-intl\";\n\nimport \"./payment-pending.styles.scss\";\nimport \"../form.styles.scss\";\n\nconst PaymentPending = ({ paymentUrl }) => {\n  const [, forceUpdate] = useReducer((x) => (x === 0 ? x + 1 : x - 1), 0);\n\n  const intl = useIntl();\n\n  const newOrder = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const payHere = () => {\n    window.open(paymentUrl, \"_blank\");\n    localStorage.setItem(\"new-order-button-visible\", true);\n    setTimeout(forceUpdate, 1000);\n  };\n\n  return (\n    <div className=\"new-order\">\n      <p>{intl.formatMessage({ id: \"payment.thankYou\" })}</p>\n      <div className=\"buttons\">\n        <CustomButton onClick={payHere}>\n          {intl.formatMessage({ id: \"payment.payHere\" })}\n        </CustomButton>\n        {localStorage.getItem(\"new-order-button-visible\") ? (\n          <CustomButton onClick={newOrder}>\n            {intl.formatMessage({ id: \"payment.newOrder\" })}\n          </CustomButton>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentPending;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { verifyPhone, verifyPhoneCode } from \"../../api/buy-bch.api\";\nimport { useIntl } from \"react-intl\";\n\nimport \"../form.styles.scss\";\n\nfunction PhoneVerification({ orderId, setOrder }) {\n  const [phone, setPhone] = useState(\"\");\n  const [validationCode, setValidationCode] = useState(\"\");\n  const [codeSent, setCodeSent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const intl = useIntl();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    if (codeSent) {\n      const response = await verifyPhoneCode(orderId, phone, validationCode);\n      if (response.order) {\n        setOrder(response.order);\n      } else if (response.errorId) {\n        setErrorMessage(intl.formatMessage({ id: response.errorId }));\n      }\n    } else {\n      const response = await verifyPhone(orderId, phone);\n      if (response) {\n        setErrorMessage(intl.formatMessage({ id: response.errorId }));\n      } else {\n        setCodeSent(!codeSent);\n      }\n    }\n  };\n\n  const handlePhoneChange = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const handleValidationCodeChange = (event) => {\n    setValidationCode(event.target.value);\n  };\n\n  return (\n    <div className=\"new-order\">\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"phoneNumber\"\n          type=\"text\"\n          handleChange={handlePhoneChange}\n          value={phone}\n          label={intl.formatMessage({ id: \"phone.number\" })}\n          required\n        />\n        {codeSent ? (\n          <FormInput\n            name=\"validationCode\"\n            type=\"text\"\n            handleChange={handleValidationCodeChange}\n            value={validationCode}\n            label={intl.formatMessage({ id: \"phone.smsCode\" })}\n            required\n          />\n        ) : null}\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">\n            {intl.formatMessage({ id: \"phone.submit\" })}\n          </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default PhoneVerification;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { verifyPhoto } from \"../../api/buy-bch.api\";\nimport { useIntl } from \"react-intl\";\n\nimport \"../form.styles.scss\";\nimport \"./photo-verification.styles.scss\";\n\nfunction PhotoVerification({\n  orderId,\n  setOrder,\n  photoSuffix,\n  declarationFormUrl,\n}) {\n  const [photo, setPhoto] = useState(null);\n  const [key, setKey] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const intl = useIntl();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const response = await verifyPhoto(orderId, photo, photoSuffix);\n    if (response.order) {\n      setPhoto(null);\n      setKey(key === 0 ? 1 + key : key - 1);\n      setOrder(response.order);\n    } else if (response.errorId) {\n      setErrorMessage(intl.formatMessage({ id: response.errorId }));\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      setPhoto(img);\n    }\n  };\n\n  const photoMessageId = () => {\n    if (photoSuffix === \"id_photo\") {\n      return \"photo.typeId\";\n    } else if (photoSuffix === \"face_photo\") {\n      return \"photo.typeFace\";\n    } else if (photoSuffix === \"declaration_form\") {\n      return \"photo.typeDeclaration\";\n    }\n  };\n\n  return (\n    <div className=\"new-order\">\n      <p>{intl.formatMessage({ id: photoMessageId() })}</p>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"photo\"\n          type=\"file\"\n          handleChange={handleChange}\n          required\n          key={key}\n        />\n        {photo ? (\n          <img alt=\"To upload\" src={URL.createObjectURL(photo)} />\n        ) : null}\n        {declarationFormUrl ? (\n          <p>\n            {intl.formatMessage(\n              {\n                id: \"photo.declarationUrl\",\n              },\n              {\n                a: (url) => <a href={declarationFormUrl}>{url}</a>,\n              }\n            )}\n          </p>\n        ) : null}\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">\n            {intl.formatMessage({ id: \"photo.upload\" })}\n          </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default PhotoVerification;\n","import { useEffect, useState } from \"react\";\n\nimport { getOrder } from \"./api/buy-bch.api\";\n\nimport \"./App.scss\";\nimport Header from \"./components/header/header.component\";\nimport NewOrder from \"./components/new-order/new-order.component\";\nimport PaymentPending from \"./components/payment-pending/payment-pending.component\";\nimport PhoneVerification from \"./components/phone-verification/phone-verification.component\";\nimport PhotoVerification from \"./components/photo-verification/photo-verification.component\";\n\nfunction App() {\n  const [order, setOrder] = useState({});\n\n  useEffect(() => {\n    const orderId = localStorage.getItem(\"orderId\");\n    if (orderId) {\n      async function fetchOrder() {\n        const retrievedOrder = await getOrder(orderId);\n        console.log(retrievedOrder);\n        setOrder(retrievedOrder);\n      }\n\n      fetchOrder();\n    }\n  }, []);\n\n  const renderSwitch = () => {\n    if (order[\"status\"] === \"pending_payment\") {\n      return <PaymentPending paymentUrl={order[\"payment_url\"]} />;\n    }\n\n    if (order[\"status\"] === \"pending_id\") {\n      if (order[\"id_pending\"] === \"phone\") {\n        return <PhoneVerification orderId={order[\"id\"]} setOrder={setOrder} />;\n      } else if (\n        order[\"id_pending\"] === \"id_photo\" ||\n        order[\"id_pending\"] === \"face_photo\" ||\n        order[\"id_pending\"] === \"declaration_form\"\n      ) {\n        return (\n          <PhotoVerification\n            orderId={order[\"id\"]}\n            setOrder={setOrder}\n            photoSuffix={order[\"id_pending\"]}\n            declarationFormUrl={order[\"id_ext_url\"]}\n          />\n        );\n      }\n    }\n    return <NewOrder setOrder={setOrder} />;\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {renderSwitch()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport IntlWrapper from \"./components/intl-wrapper/intl-wrapper.component\";\n\nReactDOM.render(\n  <IntlWrapper>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </IntlWrapper>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}