{"version":3,"sources":["api/buy-bch.api.js","components/custom-button/custom-button.component.jsx","components/form-input/form-input.component.jsx","components/spinner/spinner.component.jsx","components/new-order/new-order.component.jsx","components/payment-pending/payment-pending.component.jsx","components/phone-verification/phone-verification.component.jsx","components/photo-verification/photo-verification.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["getRate","bgnAmount","a","axios","get","response","data","getOrder","orderId","console","log","newOrder","bchAddress","email","post","bgn_amount","bch_addr","order","errorMessage","status","verifyPhone","phone","verifyPhoneCode","secretCode","secret_code","verifyPhoto","photo","photoUrl","headers","type","CustomButton","children","otherProps","inverted","className","FormInput","handleChange","label","shrink","onChange","value","length","Spinner","NewOrder","setOrder","useState","bgn","setBgn","setEmail","setBchAddress","bch","setBch","setErrorMessage","loading","setLoading","didMount","useRef","useEffect","current","timeOutId","setTimeout","bchAmount","clearTimeout","handleSubmit","event","preventDefault","localStorage","setItem","id","onSubmit","name","target","required","step","max","process","min","toString","readOnly","href","PaymentPending","paymentUrl","onClick","window","open","removeItem","location","reload","PhoneVerification","setPhone","validationCode","setValidationCode","codeSent","setCodeSent","PhotoVerification","photoSuffix","declarationFormUrl","setPhoto","key","setKey","files","img","alt","src","URL","createObjectURL","App","getItem","retrievedOrder","fetchOrder","renderSwitch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99ab1640.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getRate = async (bgnAmount) => {\n  const response = await axios.get(\"/rate/bchbgn?amount_bgn=\" + bgnAmount);\n  return response.data[\"amount_bch\"];\n};\n\nexport const getOrder = async (orderId) => {\n  try {\n    const response = await axios.get(\"/order/\" + orderId);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const newOrder = async (bgnAmount, bchAddress, email) => {\n  try {\n    const response = await axios.post(\"/order\", {\n      bgn_amount: bgnAmount,\n      bch_addr: bchAddress,\n      email,\n    });\n    return { order: response.data };\n  } catch (err) {\n    let errorMessage;\n    if (err.response && err.response.status === 503) {\n      errorMessage =\n        \"Insuffiecient BCH reserves in the service to fulfill the order. Please decrease the amount or try again later\";\n    } else {\n      errorMessage = \"Unexpected error. Please contanct system administrator.\";\n    }\n    return { errorMessage };\n  }\n};\n\nexport const verifyPhone = async (orderId, phone) => {\n  try {\n    await axios.post(\"/order/\" + orderId + \"/id/phone\", {\n      phone,\n    });\n  } catch (err) {\n    let errorMessage;\n    if (err.response && err.response.status === 400) {\n      errorMessage =\n        \"Phone number is not formed correctly. Please follow the example: +359888123456\";\n    } else {\n      errorMessage = \"Unexpected error. Please contanct system administrator.\";\n    }\n    return { errorMessage };\n  }\n};\n\nexport const verifyPhoneCode = async (orderId, phone, secretCode) => {\n  try {\n    const response = await axios.post(\"/order/\" + orderId + \"/id/phone\", {\n      phone,\n      secret_code: secretCode,\n    });\n    return { order: response.data };\n  } catch (err) {\n    let errorMessage;\n    if (err.response && err.response.status === 403) {\n      errorMessage = \"Validation code is invalid. Please try again.\";\n    } else {\n      errorMessage = \"Unexpected error. Please contanct system administrator.\";\n    }\n    return { errorMessage };\n  }\n};\n\nexport const verifyPhoto = async (orderId, photo, photoUrl) => {\n  try {\n    const response = await axios.post(\n      \"/order/\" + orderId + \"/id/\" + photoUrl,\n      photo,\n      {\n        headers: {\n          \"Content-Type\": photo.type,\n        },\n      }\n    );\n    return { order: response.data };\n  } catch (err) {\n    let errorMessage;\n    if (err.response && err.response.status === 400) {\n      errorMessage = \"Photo is of wrong format. Please try again.\";\n    } else {\n      errorMessage = \"Unexpected error. Please contanct system administrator.\";\n    }\n    return { errorMessage };\n  }\n};\n","import React from \"react\";\n\nimport \"./custom-buttom.styles.scss\";\n\nconst CustomButton = ({ children, inverted, ...otherProps }) => (\n  <button className=\"custom-button\" {...otherProps}>\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React from \"react\";\n\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({ handleChange, label, shrink, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = () => (\n  <div className=\"spinner-overlay\">\n    <div className=\"spinner-container\" />\n  </div>\n);\n\nexport default Spinner;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { newOrder, getRate } from \"../../api/buy-bch.api\";\nimport Spinner from \"../spinner/spinner.component\";\n\nimport \"./new-order.styles.scss\";\nimport \"../form-input/form-input.styles.scss\";\n\nfunction NewOrder({ setOrder }) {\n  const [bgn, setBgn] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [bchAddress, setBchAddress] = useState(\"\");\n  const [bch, setBch] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      const timeOutId = setTimeout(async () => {\n        const bchAmount = await getRate(bgn);\n        setBch(bchAmount);\n      }, 1000);\n      return () => clearTimeout(timeOutId);\n    } else {\n      didMount.current = true;\n    }\n  }, [bgn]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const response = await newOrder(bgn, bchAddress, email);\n    setLoading(false);\n    if (response.order) {\n      localStorage.setItem(\"orderId\", response.order.id);\n      setOrder(response.order);\n    } else if (response.errorMessage) {\n      setErrorMessage(response.errorMessage);\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangeBchAddress = (event) => {\n    setBchAddress(event.target.value);\n  };\n\n  const handleChangeBgn = (event) => {\n    setBgn(event.target.value);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"new-order\">\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChangeEmail}\n          value={email}\n          label=\"Your Email\"\n          required\n        />\n        <FormInput\n          name=\"bchAddress\"\n          type=\"bchAddress\"\n          handleChange={handleChangeBchAddress}\n          value={bchAddress}\n          label=\"Your Bitcoin Cash Wallet Address\"\n          required\n        />\n        <FormInput\n          name=\"bgn\"\n          type=\"number\"\n          step=\"0.001\"\n          handleChange={handleChangeBgn}\n          value={bgn}\n          label=\"Amount of BGN you want to spend\"\n          required\n          max={process.env.REACT_APP_MAX_BGN_AMOUNT}\n          min={process.env.REACT_APP_MIN_BGN_AMOUNT}\n        />\n        <FormInput\n          name=\"bch\"\n          type=\"text\"\n          value={bch ? bch.toString() : \"\"}\n          label=\"Estimated amount of BCH you will receive\"\n          readOnly\n        />\n        <div className=\"group\">\n          <input type=\"checkbox\" required name=\"termsConditions\" />\n          <label>\n            I Accept{\" \"}\n            <a href={process.env.REACT_APP_TERMS_AND_CONDITIONS_URL}>\n              Terms and Conditions\n            </a>\n          </label>\n        </div>\n\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> Buy BCH </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default NewOrder;\n","import React from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport \"./payment-pending.styles.scss\";\nimport \"../new-order/new-order.styles.scss\";\n\nfunction PaymentPending({ paymentUrl }) {\n  const newOrder = () => {\n    localStorage.removeItem(\"orderId\");\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"new-order\">\n      <p>Thank you for your order</p>\n      <div className=\"buttons\">\n        <CustomButton onClick={() => window.open(paymentUrl, \"_blank\")}>\n          Pay here\n        </CustomButton>\n        <CustomButton onClick={newOrder}>New Order</CustomButton>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentPending;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { verifyPhone, verifyPhoneCode } from \"../../api/buy-bch.api\";\n\nimport \"../new-order/new-order.styles.scss\";\n\nfunction PhoneVerification({ orderId, setOrder }) {\n  const [phone, setPhone] = useState(\"\");\n  const [validationCode, setValidationCode] = useState(\"\");\n  const [codeSent, setCodeSent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    if (codeSent) {\n      const response = await verifyPhoneCode(orderId, phone, validationCode);\n      if (response.order) {\n        setOrder(response.order);\n      } else if (response.errorMessage) {\n        setErrorMessage(response.errorMessage);\n      }\n    } else {\n      const response = await verifyPhone(orderId, phone);\n      if (response) {\n        setErrorMessage(response.errorMessage);\n      } else {\n        setCodeSent(!codeSent);\n      }\n    }\n  };\n\n  const handlePhoneChange = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const handleValidationCodeChange = (event) => {\n    setValidationCode(event.target.value);\n  };\n\n  return (\n    <div className=\"new-order\">\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"phoneNumber\"\n          type=\"text\"\n          handleChange={handlePhoneChange}\n          value={phone}\n          label=\"Your Phone Number (e.g. +359888123456)\"\n          required\n        />\n        {codeSent ? (\n          <FormInput\n            name=\"validationCode\"\n            type=\"text\"\n            handleChange={handleValidationCodeChange}\n            value={validationCode}\n            label=\"SMS Code\"\n            required\n          />\n        ) : null}\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> Submit </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default PhoneVerification;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { verifyPhoto } from \"../../api/buy-bch.api\";\n\nimport \"../new-order/new-order.styles.scss\";\nimport \"./photo-verification.styles.scss\";\n\nfunction PhotoVerification({\n  orderId,\n  setOrder,\n  photoSuffix,\n  declarationFormUrl,\n}) {\n  const [photo, setPhoto] = useState(null);\n  const [key, setKey] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const response = await verifyPhoto(orderId, photo, photoSuffix);\n    if (response.order) {\n      setPhoto(null);\n      setKey(key === 0 ? 1 + key : key - 1);\n      setOrder(response.order);\n    } else if (response.errorMessage) {\n      setErrorMessage(response.errorMessage);\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      setPhoto(img);\n    }\n  };\n\n  const photoName = () => {\n    if (photoSuffix === \"id_photo\") {\n      return \"photo of your ID\";\n    } else if (photoSuffix === \"face_photo\") {\n      return \"selfie\";\n    } else if (photoSuffix === \"declaration_form\") {\n      return \"a photo copy of your declaration form\";\n    }\n  };\n\n  return (\n    <div className=\"new-order\">\n      <p>Please upload a {photoName() + \" in PNG or JPEG format\"}</p>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"photo\"\n          type=\"file\"\n          handleChange={handleChange}\n          required\n          key={key}\n        />\n        {photo ? (\n          <img alt=\"To upload\" src={URL.createObjectURL(photo)} />\n        ) : null}\n        {declarationFormUrl ? (\n          <p>\n            Please download declaration form from{\" \"}\n            <a href={declarationFormUrl}>here</a>\n          </p>\n        ) : null}\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> UPLOAD </CustomButton>\n        </div>\n      </form>\n      {errorMessage ? <p className=\"error-message\">{errorMessage}</p> : null}\n    </div>\n  );\n}\n\nexport default PhotoVerification;\n","import { useEffect, useState } from \"react\";\n\nimport { getOrder } from \"./api/buy-bch.api\";\n\nimport \"./App.css\";\nimport NewOrder from \"./components/new-order/new-order.component\";\nimport PaymentPending from \"./components/payment-pending/payment-pending.component\";\nimport PhoneVerification from \"./components/phone-verification/phone-verification.component\";\nimport PhotoVerification from \"./components/photo-verification/photo-verification.component\";\n\nfunction App() {\n  const [order, setOrder] = useState({});\n\n  useEffect(() => {\n    const orderId = localStorage.getItem(\"orderId\");\n    if (orderId) {\n      async function fetchOrder() {\n        const retrievedOrder = await getOrder(orderId);\n        console.log(retrievedOrder);\n        setOrder(retrievedOrder);\n      }\n\n      fetchOrder();\n    }\n  }, []);\n\n  const renderSwitch = () => {\n    if (order[\"status\"] === \"pending_payment\") {\n      return <PaymentPending paymentUrl={order[\"payment_url\"]} />;\n    }\n\n    if (order[\"status\"] === \"pending_id\") {\n      if (order[\"id_pending\"] === \"phone\") {\n        return <PhoneVerification orderId={order[\"id\"]} setOrder={setOrder} />;\n      } else if (\n        order[\"id_pending\"] === \"id_photo\" ||\n        order[\"id_pending\"] === \"face_photo\" ||\n        order[\"id_pending\"] === \"declaration_form\"\n      ) {\n        return (\n          <PhotoVerification\n            orderId={order[\"id\"]}\n            setOrder={setOrder}\n            photoSuffix={order[\"id_pending\"]}\n            declarationFormUrl={order[\"id_ext_url\"]}\n          />\n        );\n      }\n    }\n    return <NewOrder setOrder={setOrder} />;\n  };\n\n  return <div className=\"App\">{renderSwitch()}</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}